'''
Write a Python script that generate 100 million (100000000) random numbers and add 
them all together with and without use of numpy  and Check how long it takes to 
execute in both the scenarios?'''

import numpy as np 
import time
def generate_random100Million():
    """_summary_

    Returns:
        ndArray: nd Array generated by numpy arrays
    """
    x=np.random.randint(1000,size=(10000 ,10000))
    return x

def sum_without_numpy(x):
    """_summary_

    Args:
        x (ndarray): ndarray generated by random function in numpy

    Returns:
        np.int64 : addition of all numbers in ndarray
    """
    total=np.int64(0)
    for i in x:
        for j in i:
            total+=j
    return total


def main_function():
    arr=generate_random100Million()
    
    # calulating sum of 100 million numbers with numpy 
    begin=time.time()
    x=arr.sum()
    end=time.time()
    print(f'Sum of 100 million number using numpy={x} in time={end-begin}')
    
    # calulating sum of 100 million numbers without numpy 
    begin= time.time()
    sum=sum_without_numpy(arr)
    end=time.time()
    print(f'Sum of 100 million numbers without numpy={sum} in time={end-begin}')
          
           
if __name__=="__main__" :
    main_function()
    